// Code generated by cli-gen. DO NOT EDIT.

package generated

import (
	"reflect"
)

// DefaultingStrategy applies default values to a resource object
type DefaultingStrategy interface {
	ApplyDefaults(obj interface{}) error
}

// GetDefaultingStrategy returns the defaulting strategy for a given kind
func GetDefaultingStrategy(kind string) DefaultingStrategy {
	strategy, ok := defaultingStrategies[kind]
	if !ok {
		return &NoOpDefaultingStrategy{}
	}
	return strategy
}

// NoOpDefaultingStrategy is a no-op defaulting strategy
type NoOpDefaultingStrategy struct{}

func (s *NoOpDefaultingStrategy) ApplyDefaults(obj interface{}) error {
	return nil
}

var defaultingStrategies = map[string]DefaultingStrategy{}

// Helper function to check if a value is zero
func isZeroValue(v reflect.Value) bool {
	switch v.Kind() {
	case reflect.Array, reflect.Map, reflect.Slice, reflect.String:
		return v.Len() == 0
	case reflect.Bool:
		return !v.Bool()
	case reflect.Int, reflect.Int8, reflect.Int16, reflect.Int32, reflect.Int64:
		return v.Int() == 0
	case reflect.Uint, reflect.Uint8, reflect.Uint16, reflect.Uint32, reflect.Uint64, reflect.Uintptr:
		return v.Uint() == 0
	case reflect.Float32, reflect.Float64:
		return v.Float() == 0
	case reflect.Interface, reflect.Ptr:
		return v.IsNil()
	}
	return false
}
