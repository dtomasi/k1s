name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  # Run comprehensive quality checks on all supported Go versions  
  quality-checks:
    name: Quality Checks
    uses: ./.github/workflows/ci.yml

  # Test on multiple Go versions and platforms for release compatibility
  test-matrix:
    name: Multi-Version Test Matrix
    needs: quality-checks
    uses: ./.github/workflows/test-matrix.yml
    with:
      go-versions: '["1.23.0", "1.24.0"]'
      os-matrix: '["ubuntu-latest", "macos-latest", "windows-latest"]'
      coverage-upload: true

  # Build and security scan for release artifacts
  build-security:
    name: Build & Security
    needs: test-matrix
    uses: ./.github/workflows/build-security.yml
    with:
      go-version: "1.24.0"
      run-benchmarks: true
      run-security-scan: true

  # Semantic release with goreleaser
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    permissions:
      contents: write   # für GitHub Releases
      packages: write   # falls Docker-Images o.ä. gebaut werden
      id-token: write   # falls du später OIDC nutzen willst
    needs:
      - build-security
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for semantic release

      - name: Setup Hermit
        uses: cashapp/activate-hermit@v1

      - uses: go-semantic-release/action@v1
        id: semrel
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          changelog-generator-opt: "emojis=true"
          hooks: "goreleaser"
          working-directory: ./tools/cli-gen
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}